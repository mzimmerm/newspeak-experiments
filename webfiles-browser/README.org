* About this project, webfiles-browser

This project develops a files browser based on Newspeak 101 tutorial https://newspeaklanguage.org/ns101/ns101.html#sec-exploring-the-brave-new-world

The above tutorial develops a local filesystem browser in Newspeak on Squeak. This project uses the browser based (primodialsoup based) Newspeak, so part of this project mocks local filesystem in AAUtilities.ns

Files:

- ~AAUtilities.ns~ contains a mocked up local filesystem
- ~AABraveNewWorldExplorer.ns~ contains the filesystem browser.
- Section *1. Top Workspace Non-UI* contains Workspace commands testing commands that do not bring up UI
- Section *2. Top Workspace UI* contains Workspace commands testing commands that bring up UI

  
* AAUtilities structure

- AAUtilities
  - Files
    - FilePathBase
    - FilesystemBase
    - FilePath (passed FilesystemMock but only needs API of FilesystemBase. everything is public to adapt to the demo, but many things should not be) 
  - FilesMock    
    - FilesystemMock (must newly import FilePath)


* 1. Top Workspace Non-UI: Get files on level 1.

#+name: workspace-top
#+begin_example
|
root level1Entries level1FullPaths
private utilities = (ide namespacing manifest AAUtilities) usingPlatform: platform.
private files = utilities Files new.
private filesMock = utilities FilesMock using: files FilesystemBase.
private FilePath = files FilePath.
private FilesystemMock = filesMock FilesystemMock.
(* single instance of filesystemMock. All FilePath creations are delegated to it *)
private filesystemMock = FilesystemMock usingUtilityFiles: files.
|

root:: FilePath for: '/home/user/' inFilesystem: filesystemMock.
level1Entries:: root entries.
level1FullPaths:: level1Entries collect: [:filePath | (filePath fullFilePath)].
(* result should be instanceoff _Array, showing 4 filePath entries *)
#+end_example


* 2. Top Workspace UI : Run Explorer UI: In HopscotchWindow openSubject: AABraveNewWorldExplorer FileSubject

#+open-explorer-in-HopscotchWindow
#+begin_example
|explorer utilitiesClass = ide namespacing manifest AAUtilities.| 
explorer:: AABraveNewWorldExplorer usingPlatform: platform andUtilitiesClass: utilitiesClass.
hopscotch core HopscotchWindow openSubject: ((explorer FileSubject) onModel: '/home/user/').
#+end_example

Evaluating it shows two things:

- result of evaluation: instance of HopscotchWindow (with slots)
- The HopscotchWindow bar (clock, home, reload, help) with a single label (/home/user/) appended from FilePresenter#define


[[file:img/Notes.org-explorer-1.png]]


public createPresenter ^ <Presenter> = (
	^FilePresenter onSubject: self.
    )


* 3. Top Workspace UI : Run Explorer UI extending ProgrammingPresenter from IDE: In HopscotchWindow openSubject: AABraveNewWorldExplorer FileSubject

#+open-explorer-in-HopscotchWindow
#+begin_example
|explorer utilitiesClass = ide namespacing manifest AAUtilities.| 
explorer:: AABraveNewWorldExplorer usingPlatform: platform andUtilitiesClass: utilitiesClass andIDE: ide.
hopscotch core HopscotchWindow openSubject: ((explorer FileSubject) onModel: '/home/user/').
#+end_example

Evaluating it shows two things:

- result of evaluation: instance of HopscotchWindow (with slots)
- The HopscotchWindow bar (clock, home, reload, help) with a single label (/home/user/) appended from FilePresenter#define


[[file:img/Notes.org-explorer-1.png]]


public createPresenter ^ <Presenter> = (
	^FilePresenter onSubject: self.
    )
    
